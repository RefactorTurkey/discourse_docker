#!/bin/bash

source setup-functions

##
## template file names
##
app_name=app

# @todo standalone to service
template_path=samples/standalone.yml
config_file=containers/$app_name.yml
changelog=/tmp/changelog

##
## Check requirements before creating a copy of a config file we won't edit
##
check_root
check_and_install_docker
check_disk_and_memory

##
## make a copy of the simple standalone config file
##
if [ -a $config_file ]
then
  echo "The configuration file $config_file already exists!"
  echo ""
  echo "If you want to delete your old configuration file and start over:"
  echo "rm $config_file"
  exit 1
fi

ask_user_for_config
scale_ram_and_cpu
validate_config

##
## if we reach this point without exiting, OK to proceed
##
#./launcher bootstrap $app_name && ./launcher start $app_name

if [ "$launcher_strategy" == "swarm" ]
then
    rm -fr /var/discourse/shared/*
    docker rm -f $redis_name $data_name $app_name
    docker service rm $redis_name $data_name $app_name

    mkdir -p /var/discourse/shared/redis
    mkdir -p /var/discourse/shared/redis/log/var-log

    mkdir -p /var/discourse/shared/data
    mkdir -p /var/discourse/shared/data/log/var-log

    mkdir -p /var/discourse/shared/web-only
    mkdir -p /var/discourse/shared/web-only/log/var-log

    mkdir -p /var/discourse/shared/standalone
    mkdir -p /var/discourse/shared/standalone/log/var-log

    NETWORK="discourse"
    docker network ls -f "name=$NETWORK" | grep $NETWORK > /dev/null || (echo "network docker..." && docker network create  --driver overlay  $NETWORK)

    ./launcher bootstrap $redis_name
    ./launcher start $redis_name

    ./launcher bootstrap $data_name
    ./launcher start $data_name

    ./launcher bootstrap $app_name

    docker rm -f $redis_name $data_name

    ./launcher service $data_name
    ./launcher service $redis_name
    ./launcher service $app_name
fi

if [ "$launcher_strategy" == "normal" ]
then
    check_ports
     ./runner bootstrap $app_name && ./runner start $app_name
fi